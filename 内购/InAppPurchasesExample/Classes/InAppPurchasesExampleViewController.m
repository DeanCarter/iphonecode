////  InAppPurchasesExampleViewController.m//  InAppPurchasesExample////  Created by  Yakov Ilyin on 2/13/10.//  Copyright Glosculptor, ISDS 2010. All rights reserved.//#import "InAppPurchasesExampleViewController.h"#import "Reachability.h"@implementation InAppPurchasesExampleViewController@synthesize feature1ViewController;@synthesize feature2ViewController;@synthesize lockView;@synthesize feature1Button;@synthesize feature2Button;@synthesize seeFeature1Button;@synthesize seeFeature2Button;@synthesize indicator;-(IBAction)seeFeature1{	[self.navigationController pushViewController:feature1ViewController animated:YES];}-(IBAction)seeFeature2{	[self.navigationController pushViewController:feature2ViewController animated:YES];}-(void)showLockView{	lockView.hidden = NO;	[indicator startAnimating];}-(void)hideLockView{	lockView.hidden = YES;	[indicator stopAnimating];}- (void)productAPurchased{	[self hideLockView];	feature1Button.hidden = YES;	seeFeature1Button.hidden = NO;}- (void)productBPurchased{	[self hideLockView];	feature2Button.hidden = YES;	seeFeature2Button.hidden = NO;}- (void)failed{	[self hideLockView];}-(IBAction)feature1ButtonPressed{	Reachability *reach = [Reachability reachabilityWithHostName:@"www.apple.com"];	NetworkStatus status = [reach currentReachabilityStatus];		switch (status) {		case NotReachable:{			UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil 															message:@"没有可用网络，请检查网络连接" 														   delegate:self 												  cancelButtonTitle:@"OK" 												  otherButtonTitles:nil];			[alert show];			[alert release];		}			break;		default:			break;	}	[self showLockView];	[[MKStoreManager sharedManager] buyFeatureA];}-(IBAction)feature2ButtonPressed{	Reachability *reach = [Reachability reachabilityWithHostName:@"www.apple.com"];	NetworkStatus status = [reach currentReachabilityStatus];		switch (status) {		case NotReachable:{			UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil 															message:@"没有可用网络，请检查网络连接" 														   delegate:self 												  cancelButtonTitle:@"OK" 												  otherButtonTitles:nil];			[alert show];			[alert release];		}			break;		default:			break;	}	[self showLockView];	[[MKStoreManager sharedManager] buyFeatureB];}/*// The designated initializer. Override to perform setup that is required before the view is loaded.- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {    if (self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil]) {        // Custom initialization    }    return self;}*//*// Implement loadView to create a view hierarchy programmatically, without using a nib.- (void)loadView {}*/// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.- (void)viewDidLoad {    [super viewDidLoad];		self.title = @"My Store";		[MKStoreManager sharedManager].delegate = self;		if ([MKStoreManager featureAPurchased])	{		feature1Button.hidden = YES;		seeFeature1Button.hidden = NO;	}		if ([MKStoreManager featureBPurchased])	{		feature2Button.hidden = YES;		seeFeature2Button.hidden = NO;	}}/*// Override to allow orientations other than the default portrait orientation.- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {    // Return YES for supported orientations    return (interfaceOrientation == UIInterfaceOrientationPortrait);}*/- (void)didReceiveMemoryWarning {	// Releases the view if it doesn't have a superview.    [super didReceiveMemoryWarning];		// Release any cached data, images, etc that aren't in use.}- (void)viewDidUnload {	// Release any retained subviews of the main view.	// e.g. self.myOutlet = nil;}- (void)dealloc {    [super dealloc];}@end